// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@typescript-eslint/explicit-module-boundary-types off should invalidate : index.ts 1`] = `
Object {
  "errorCount": 1,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "results": Array [
    Object {
      "errorCount": 1,
      "filePath": Any<String>,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 8,
          "endColumn": 23,
          "endLine": 1,
          "line": 1,
          "message": "Missing return type on function.",
          "messageId": "missingReturnType",
          "nodeType": "FunctionDeclaration",
          "ruleId": "@typescript-eslint/explicit-module-boundary-types",
          "severity": 1,
        },
        Object {
          "column": 16,
          "endColumn": 27,
          "endLine": 6,
          "line": 6,
          "message": "Missing return type on function.",
          "messageId": "missingReturnType",
          "nodeType": "FunctionDeclaration",
          "ruleId": "@typescript-eslint/explicit-module-boundary-types",
          "severity": 1,
        },
        Object {
          "column": 25,
          "endColumn": 30,
          "endLine": 11,
          "line": 11,
          "message": "Missing return type on function.",
          "messageId": "missingReturnType",
          "nodeType": "ArrowFunctionExpression",
          "ruleId": "@typescript-eslint/explicit-module-boundary-types",
          "severity": 1,
        },
        Object {
          "column": 25,
          "endColumn": 55,
          "endLine": 14,
          "line": 14,
          "message": "Argument 'arg' should be typed.",
          "messageId": "missingArgType",
          "nodeType": "ArrowFunctionExpression",
          "ruleId": "@typescript-eslint/explicit-module-boundary-types",
          "severity": 1,
        },
        Object {
          "column": 50,
          "endColumn": 53,
          "endLine": 14,
          "line": 14,
          "message": "Invalid type \\"any\\" of template literal expression.",
          "messageId": "invalidType",
          "nodeType": "Identifier",
          "ruleId": "@typescript-eslint/restrict-template-expressions",
          "severity": 2,
        },
        Object {
          "column": 25,
          "endColumn": 70,
          "endLine": 17,
          "line": 17,
          "message": "Argument 'arg' should be typed.",
          "messageId": "missingArgType",
          "nodeType": "ArrowFunctionExpression",
          "ruleId": "@typescript-eslint/explicit-module-boundary-types",
          "severity": 1,
        },
        Object {
          "column": 3,
          "endColumn": 11,
          "endLine": 21,
          "line": 21,
          "message": "Missing return type on function.",
          "messageId": "missingReturnType",
          "nodeType": "FunctionExpression",
          "ruleId": "@typescript-eslint/explicit-module-boundary-types",
          "severity": 1,
        },
      ],
      "source": "export function test() {
  return;
}

// Should indicate that a number is returned
export default function () {
  return 1;
}

// Should indicate that a string is returned
export const arrowFn1 = () => \\"test\\";

// All arguments should be typed
export const arrowFn2 = (arg): string => \`test \${arg}\`;

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const arrowFn3 = (arg: any): string => \`test \${arg as string}\`;

export class Test {
  // Should indicate that no value is returned (void)
  method() {
    return;
  }
}
",
      "warningCount": 6,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 6,
}
`;
