// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fails with incorrect file 1`] = `
Object {
  "errorCount": 9,
  "fixableErrorCount": 3,
  "fixableWarningCount": 1,
  "results": Array [
    Object {
      "errorCount": 9,
      "filePath": StringContaining "eslint-config-recommended/__fixtures__/incorrect.js",
      "fixableErrorCount": 3,
      "fixableWarningCount": 1,
      "messages": Array [
        Object {
          "column": 8,
          "endColumn": 30,
          "endLine": 5,
          "line": 5,
          "message": "Unable to resolve path to module 'import/no-unresolved'.",
          "nodeType": "Literal",
          "ruleId": "import/no-unresolved",
          "severity": 2,
        },
        Object {
          "column": 8,
          "endColumn": 30,
          "endLine": 6,
          "line": 6,
          "message": "Unable to resolve path to module 'import/no-duplicates'.",
          "nodeType": "Literal",
          "ruleId": "import/no-unresolved",
          "severity": 2,
        },
        Object {
          "column": 8,
          "endColumn": 30,
          "endLine": 6,
          "fix": Object {
            "range": Array [
              151,
              181,
            ],
            "text": "",
          },
          "line": 6,
          "message": "'import/no-duplicates' imported multiple times.",
          "nodeType": "Literal",
          "ruleId": "import/no-duplicates",
          "severity": 2,
        },
        Object {
          "column": 1,
          "fix": Object {
            "range": Array [
              181,
              181,
            ],
            "text": "
",
          },
          "line": 7,
          "message": "Expected 1 empty line after import statement not followed by another import.",
          "nodeType": null,
          "ruleId": "import/newline-after-import",
          "severity": 2,
        },
        Object {
          "column": 8,
          "endColumn": 30,
          "endLine": 7,
          "line": 7,
          "message": "Unable to resolve path to module 'import/no-duplicates'.",
          "nodeType": "Literal",
          "ruleId": "import/no-unresolved",
          "severity": 2,
        },
        Object {
          "column": 8,
          "endColumn": 30,
          "endLine": 7,
          "line": 7,
          "message": "'import/no-duplicates' imported multiple times.",
          "nodeType": "Literal",
          "ruleId": "import/no-duplicates",
          "severity": 2,
        },
        Object {
          "column": 3,
          "endColumn": 20,
          "endLine": 13,
          "line": 13,
          "message": "Move function declaration to program root.",
          "messageId": "moveDeclToRoot",
          "nodeType": "FunctionDeclaration",
          "ruleId": "no-inner-declarations",
          "severity": 2,
        },
        Object {
          "column": 12,
          "endColumn": 15,
          "endLine": 13,
          "line": 13,
          "message": "'foo' is defined but never used.",
          "messageId": "unusedVar",
          "nodeType": "Identifier",
          "ruleId": "no-unused-vars",
          "severity": 2,
        },
        Object {
          "column": 3,
          "endColumn": 26,
          "endLine": 19,
          "line": 19,
          "message": "Test has no assertions",
          "messageId": "noAssertions",
          "nodeType": "CallExpression",
          "ruleId": "jest/expect-expect",
          "severity": 1,
        },
        Object {
          "column": 7,
          "endColumn": 10,
          "endLine": 25,
          "fix": Object {
            "range": Array [
              426,
              429,
            ],
            "text": "const",
          },
          "line": 25,
          "message": "'foo' is never reassigned. Use 'const' instead.",
          "messageId": "useConst",
          "nodeType": "Identifier",
          "ruleId": "prefer-const",
          "severity": 2,
        },
        Object {
          "column": 25,
          "endColumn": 26,
          "endLine": 32,
          "fix": Object {
            "range": Array [
              512,
              526,
            ],
            "text": "a: \\"a\\", b: \\"b\\"",
          },
          "line": 32,
          "message": "Expected object keys to be in ascending order. 'a' should be before 'b'.",
          "nodeType": "Property",
          "ruleId": "sort-keys-fix/sort-keys-fix",
          "severity": 1,
        },
      ],
      "source": "// #region extends.import/recommended
import \\"eslint\\";
import \\"fs\\";
import \\"@jest/core\\";
import \\"import/no-unresolved\\";
import \\"import/no-duplicates\\";
import \\"import/no-duplicates\\";
(\\"import/newline-after-import error\\");
// #endregion

// #region eslint:recommended
{
  function foo() {}
}
// #endregion

// #region plugin:jest/recommended
{
  test(\\"empty\\", () => {});
}
// #endregion

// #region rules.prefer-const: \\"on\\"
{
  let foo = \\"bar\\";
  foo;
}
// #endregion

// #region rules sort-keys
{
  console.log({ b: \\"b\\", a: \\"a\\", c: \\"c\\" });
}
// #endregion
",
      "warningCount": 2,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 2,
}
`;

exports[`works with correct file 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": StringContaining "eslint-config-recommended/__fixtures__/correct.js",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [],
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;
